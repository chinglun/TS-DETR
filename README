# TS-DETR:Traffic Sign Detection based on Positive and Negative Sample Augmentation


### Install
We implement TS-DETR using [MMDetection V2.25.3](https://github.com/open-mmlab/mmdetection/releases/tag/v2.25.3) and [MMCV V1.5.0](https://github.com/open-mmlab/mmcv/releases/tag/v1.5.0).

pip install -r requirements.txt

###dataset

### Data structure
```
Co-DETR
└── TWTSDB
    ├── coco
    │   ├── annotations
    │   │      ├── instances_train2017.json
    │   │      └── instances_val2017.json
    │   ├── train2017
    │   └── val2017
    │── FP
    │   └── Negative Sample
    │
    │── crop-twtsdb
```

### Training
Train TS-DETR in TWTSDB:
bash tools/dist_train.sh projects/configs/co_dino/MutiAugment98.py 1 My_folder



### Testing
Test TS-DETR in TWTSDB:
bash tools/dist_test.sh  projects/configs/co_dino/MutiAugment98.py TWTSDB-TS-detr/epoch_50..pth 1 --eval bbox 

### demo 
Inference Image :
python demo/image_demo.py demo-result/3256.jpg projects/configs/co_dino/MutiAugment98.py TWTSDB-TS-detr/epoch_50.pth   --out result.jpg

Inference Folder:
python demo/folder_demo.py inference_folder projects/configs/co_dino/MutiAugment98.py TWTSDB-TS-detr/epoch_50.pth  --out-file My_folder

Inference Video:
python demo/video_demo.py demo-result/example-video1.mp4 projects/configs/co_dino/MutiAugment98.py TWTSDB-TS-detr/epoch_50.pth  --out example1-result.mp4

calculate Precision,Recall:
python demo/my_test.py data/coco/val2017 projects/configs/co_dino/MutiAugment98.py TWTSDB-TS-detr/epoch_50.pth  --out-file test
